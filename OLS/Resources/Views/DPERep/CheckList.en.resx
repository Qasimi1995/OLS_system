<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Age" xml:space="preserve">
    <value>Age</value>
  </data>
  <data name="BackToDashboard" xml:space="preserve">
    <value>Back to Dashboard</value>
  </data>
  <data name="Board" xml:space="preserve">
    <value>Board</value>
  </data>
  <data name="Check" xml:space="preserve">
    <value>Check</value>
  </data>
  <data name="CheckList" xml:space="preserve">
    <value>Private Educational Institution Checklist</value>
  </data>
  <data name="ComputerCount" xml:space="preserve">
    <value>Computer No#</value>
  </data>
  <data name="ComputerLab" xml:space="preserve">
    <value>Computer Lab</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="DistanceFromGovSchool" xml:space="preserve">
    <value>Distance from Governmental School</value>
  </data>
  <data name="DistanceFromPrivateSchool" xml:space="preserve">
    <value>Distance from Private School</value>
  </data>
  <data name="District" xml:space="preserve">
    <value>District</value>
  </data>
  <data name="DrinkingWater" xml:space="preserve">
    <value>Drinking Water</value>
  </data>
  <data name="EducationLevel" xml:space="preserve">
    <value>Education Level</value>
  </data>
  <data name="EducationServiceYears" xml:space="preserve">
    <value>Years of service in Education</value>
  </data>
  <data name="FirseExtenguisherTools" xml:space="preserve">
    <value>Fire Extenguisher Tools</value>
  </data>
  <data name="FirstAidMedical" xml:space="preserve">
    <value>First Aid Medical</value>
  </data>
  <data name="Gender" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="GeneralRemarks" xml:space="preserve">
    <value>General Remarks</value>
  </data>
  <data name="GraduationYear" xml:space="preserve">
    <value>Graduation Year</value>
  </data>
  <data name="InfoAboutPrincipleAndTeacher" xml:space="preserve">
    <value>Info about principle and teachers of the private educational institute</value>
  </data>
  <data name="Item" xml:space="preserve">
    <value>Item</value>
  </data>
  <data name="LabratoryMaterial" xml:space="preserve">
    <value>Labratory Material</value>
  </data>
  <data name="Library" xml:space="preserve">
    <value>Library</value>
  </data>
  <data name="LibraryBooks" xml:space="preserve">
    <value>Library Books#</value>
  </data>
  <data name="NameLastName" xml:space="preserve">
    <value>Name and Last Name</value>
  </data>
  <data name="NidNumber" xml:space="preserve">
    <value>NID Number</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="NoOfRooms" xml:space="preserve">
    <value>No# of Rooms</value>
  </data>
  <data name="Occupation" xml:space="preserve">
    <value>Occupation</value>
  </data>
  <data name="Print" xml:space="preserve">
    <value>Print</value>
  </data>
  <data name="Province" xml:space="preserve">
    <value>Province</value>
  </data>
  <data name="Remarks" xml:space="preserve">
    <value>Remarks</value>
  </data>
  <data name="School" xml:space="preserve">
    <value>School</value>
  </data>
  <data name="SchoolAddress" xml:space="preserve">
    <value>School Address</value>
  </data>
  <data name="SchoolGender" xml:space="preserve">
    <value>School Gender </value>
  </data>
  <data name="SchoolInformation" xml:space="preserve">
    <value>School Information</value>
  </data>
  <data name="SchoolLevel" xml:space="preserve">
    <value>School Level</value>
  </data>
  <data name="SportFacilities" xml:space="preserve">
    <value>Sport Facilities</value>
  </data>
  <data name="StudentsDeskAndChair" xml:space="preserve">
    <value>Students Desk and Chair</value>
  </data>
  <data name="SubmittedInformation" xml:space="preserve">
    <value>Submitted Information</value>
  </data>
  <data name="TeacherDeskAndChair" xml:space="preserve">
    <value>Teacher Desk and Chair</value>
  </data>
  <data name="TeachingAids" xml:space="preserve">
    <value>Teaching Aids</value>
  </data>
  <data name="TeachingBook" xml:space="preserve">
    <value>Teaching Books</value>
  </data>
  <data name="Transportation" xml:space="preserve">
    <value>Transportation</value>
  </data>
  <data name="Village" xml:space="preserve">
    <value>Village or Nahia</value>
  </data>
  <data name="WashRooms" xml:space="preserve">
    <value>No# of Wash Rooms</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
</root>